references:
  defaults: &defaults
    working_directory: ~/theme
    docker:
      - image: circleci/php:7.3-stretch-node-browsers

  npm_permissions: &npm_permissions
    run:
      name: Set user permissions
      command: sudo chown -R $(whoami):$(whoami) ~/theme

  npm_restore_cache: &npm_restore_cache
    restore_cache:
      keys:
        - node-v4-{{ checksum "package.json" }}
        - node-v4-

  npm_save_cache: &npm_save_cache
    save_cache:
      key: node-v4-{{ checksum "package.json" }}
      paths:
        - node_modules

  npm_install: &npm_install
    run:
      name: Install NPM packages
      command: npm install --silent

  composer_restore_cache: &composer_restore_cache
    restore_cache:
      keys:
        - v1-dependencies-{{ checksum "composer.lock" }}
        - v1-dependencies-

  composer_save_cache: &composer_save_cache
    save_cache:
      key: composer-v1-{{ checksum "composer.lock" }}
      paths:
        - vendor

  composer_install: &composer_install
    run:
      name: Compile vendors from composer packages
      command: composer install -n --ignore-platform-reqs --optimize-autoloader

  append_sshkey: &append_sshkey
    add_ssh_keys:
      fingerprints:
        - "$SSH_FINGERPRINT"

  add_serverkeys: &add_serverkeys
    run:
      name: Add server keys
      command: ssh-keyscan $SERVER_IP >> ~/.ssh/known_hosts

version: 2.0
jobs:
  jslint:
    <<: *defaults
    steps:
      - checkout
      - << : *npm_permissions
      - << : *npm_restore_cache
      - << : *npm_install
      - << : *npm_save_cache
      - run: 
          name: Lint JS files
          command: npx gulp jsLint

  sasslint:
    <<: *defaults
    steps:
      - checkout
      - << : *npm_permissions
      - << : *npm_restore_cache
      - << : *npm_install
      - << : *npm_save_cache
      - run: 
          name: Lint SASS files
          command: npx gulp sassLint

  staging:
    <<: *defaults
    steps:
      - checkout
      - << : *npm_permissions
      - << : *npm_restore_cache
      - << : *npm_install
      - << : *npm_save_cache
      - run:
          name: Gulp build staging
          command: npx gulp build
      - << : *composer_restore_cache
      - << : *composer_install
      - << : *composer_save_cache
      - << : *append_sshkey
      - << : *add_serverkeys
      - run:
          name: Rsync deploy to staging
          command: rsync -avzp --chown=$USER:$USER --delete --exclude-from '.rsyncignore' . $USER@$SERVER_IP:/home/$USER/domains/$STAGING_PATH

  production:
    <<: *defaults
    steps:
      - checkout
      - << : *npm_permissions
      - << : *npm_restore_cache
      - << : *npm_install
      - << : *npm_save_cache
      - run:
          name: Gulp build production
          command: npx gulp buildProduction
      - << : *composer_restore_cache
      - << : *composer_install
      - << : *composer_save_cache
      - << : *append_sshkey
      - << : *add_serverkeys
      - run:
          name: Rsync deploy to production
          command: rsync -avzp --chown=$USER:$USER --delete --exclude-from '.rsyncignore' . $USER@$SERVER_IP:/home/$USER/domains/$PRODUCTION_PATH

workflows: 
  version: 2
  deploy:
    jobs:
      - jslint:
          filters: &filter_all
            tags:
              only: /.*?/

      - sasslint:
          filters: *filter_all

      - staging:
          requires:
            - jslint
            - sasslint
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                # v1.0.0-1 / v1.0.0-pre1 / v1.0.0
                - /^v\d+\.\d+\.\d+(\-.+)?$/

      - approve_deploy:
          type: approval
          requires:
            - staging
          filters: &filter_production
            branches:
              ignore: /.*/
            tags:
              only:
                # v1.0.0
                - /^v\d+\.\d+\.\d+$/

      - production: 
          requires: 
            - staging
            - approve_deploy
          filters: *filter_production