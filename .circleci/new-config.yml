# -------
# Hallo!
# -------
version: 2.1

references:
  # Setup machine for deploy job
  deploys: &deploys
    machine: true
  
  # Setup docker image for linting
  linting: &linting
    working_directory: ~/theme
    docker:
      - image: circleci/php:7.3-stretch-node-browsers

  # General actions
  install_ovpn_rsync: &install_ovpn_rsync
    run:
      name: Install OpenVPN and Rsync
      command: |
        sudo apt-get update
        sudo apt-get install libssl-dev liblzo2-dev libpam0g-dev -y
        sudo wget https://swupdate.openvpn.org/community/releases/openvpn-2.4.7.tar.gz
        sudo tar xfz openvpn-2.4.7.tar.gz
        cd openvpn-2.4.7
        sudo ./configure
        sudo make
        sudo make install
        sudo apt-get install rsync -y
  
  # Deploy action
  rsync_deploy: &rsync_deploy
    run:
      name: Rsync deploy to staging
      command:  rsync -avzp --chown=$USER:$USER --exclude-from '.rsyncignore' . $USER@$SERVER_IP:/home/$USER/domains/$PRODUCTION_PATH
  
  # VPN actions
  vpn_setup: &vpn_setup
    run:
      name: VPN Setup
      background: true
      command: |
        phone_home=$(netstat -an | grep ':22 .*ESTABLISHED' | head -n1 | awk '{ split($5, a, ":"); print a[1] }')
        echo $phone_home

        echo $VPN_CONFIG | base64 --decode > /tmp/config.ovpn
        sudo openvpn --config /tmp/config.ovpn \
          --route $phone_home 255.255.255.255 net_gateway \
          --route 169.254.0.0 255.255.0.0 net_gateway
  
  vpn_await_connection: &vpn_await_connection
    run:
      name: Await VPN connection
      command: sleep 15

  vpn_add_ssh_keys: &vpn_add_ssh_keys
    name: Add SSH fingerprint
    fingerprints:
      - "$SSH_FINGERPRINT"

  vpn_disconnect: &vpn_disconnect
    run:
      name: Disconnect from VPN
      command: sudo killall openvpn || true
      when: always

  vpn_cleanup: &vpn_cleanup
    run:
      name: Remove OpenVPN config
      command: sudo rm /tmp/config.ovpn
      when: always
  
  # NPM
  npm_permissions: &npm_permissions
    run:
      name: Set user permissions
      command: sudo chown -R $(whoami):$(whoami) ~/theme

  npm_restore_cache: &npm_restore_cache
    restore_cache:
      keys:
        - node-v4-{{ checksum "package.json" }}
        - node-v4-

  npm_save_cache: &npm_save_cache
    save_cache:
      key: node-v4-{{ checksum "package.json" }}
      paths:
        - node_modules

  npm_install: &npm_install
    run:
      name: Install NPM packages
      command: npm install --silent

  npm_js_lint: &npm_js_lint
    run:
      name: Lint JavaScript files
      command: npx gulp jsLint
  
  npm_sass_lint: &npm_sass_lint
    run:
      name: Lint scss files
      command: npx gulp sassLint
  
  npm_gulp_build_staging: &npm_gulp_build_staging
    run:
      name: Gulp build assets for staging
      command: npx gulp build

  npm_gulp_build_production: &npm_gulp_build_production
    run:
      name: Gulp build assets for production
      command: npx gulp buildProduction

  # Composer
  composer_restore_cache: &composer_restore_cache
    restore_cache:
      keys:
        - v1-dependencies-{{ checksum "composer.lock" }}
        - v1-dependencies-

  composer_save_cache: &composer_save_cache
    save_cache:
      key: composer-v1-{{ checksum "composer.lock" }}
      paths:
        - vendor

  composer_install: &composer_install
    run:
      name: Compile vendors from composer packages
      command: composer install -n --ignore-platform-reqs --optimize-autoloader

jobs:
  jslint:
    <<: *linting
    steps:
      - checkout
      - << : *npm_permissions
      - << : *npm_restore_cache
      - << : *npm_install
      - << : *npm_save_cache
      - << : *npm_js_lint

  sasslint:
    <<: *linting
    steps:
      - checkout
      - << : *npm_permissions
      - << : *npm_restore_cache
      - << : *npm_install
      - << : *npm_save_cache
      - << : *npm_sass_lint

  staging:
    <<: *deploys
    steps:
      - checkout
      - << : *install_ovpn_rsync
      - << : *npm_restore_cache
      - << : *npm_install
      - << : *npm_save_cache
      - << : *npm_gulp_build_staging
      - << : *composer_restore_cache
      - << : *composer_install
      - << : *composer_save_cache
      - << : *vpn_add_ssh_keys
      - << : *vpn_setup
      - << : *vpn_await_connection
      - << : *rsync_deploy
      - << : *vpn_disconnect
      - << : *vpn_cleanup

  production:
    <<: *deploys
    steps:
      - checkout
      - << : *install_ovpn_rsync
      - << : *npm_restore_cache
      - << : *npm_install
      - << : *npm_save_cache
      - << : *npm_gulp_build_production
      - << : *composer_restore_cache
      - << : *composer_install
      - << : *composer_save_cache
      - << : *vpn_add_ssh_keys
      - << : *vpn_setup
      - << : *vpn_await_connection
      - << : *rsync_deploy
      - << : *vpn_disconnect
      - << : *vpn_cleanup

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - jslint:
          filters: &filter_all
            tags:
              only: /.*?/

      - sasslint:
          filters: &filter_all

      - staging:
          requires:
            - jslint
            - sasslint
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /^v\d+\.\d+\.\d+(\-.+)?$/

      - approve_deploy:
          type: approval
          requires:
            - staging
          filters: &filter_production
            branches:
              ignore: /.*/
            tags:
              only:
                - /^v\d+\.\d+\.\d+$/

      - production: 
          requires: 
            - staging
            - approve_deploy
          filters: *filter_production